"""
Django settings for Django_Pro project.
Generated by 'django-admin startproject' using Django 5.2.5.

For more info:
https://docs.djangoproject.com/en/5.2/topics/settings/
"""

from pathlib import Path
from datetime import timedelta

# -------------------------------
# BASE DIRECTORY
# -------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent
# Used for building file paths relative to project

# -------------------------------
# SECURITY SETTINGS
# -------------------------------
SECRET_KEY = 'django-insecure-!4ysexum%srsf#z*a9m!l%i*85km++ic^ajc5kqm0b(e%m1w(5'
DEBUG = True  # ⚠️ Never use True in production
ALLOWED_HOSTS = []  # Add production hosts here

# -------------------------------
# INSTALLED APPS
# -------------------------------
INSTALLED_APPS = [
    # Django built-ins
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Project apps
    'PriceTrack',

    # 3rd-party apps
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt.token_blacklist",
]

# -------------------------------
# MIDDLEWARE
# -------------------------------
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",   # Handle CORS
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# -------------------------------
# URL & Template Configuration
# -------------------------------
ROOT_URLCONF = 'Django_Pro.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Add custom template dirs here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Django_Pro.wsgi.application'

# -------------------------------
# DATABASE
# -------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',        # SQLite for dev; switch to PostgreSQL in prod
        'NAME': BASE_DIR / 'db.sqlite3',
        "USER": "postgres",       # Only needed for PostgreSQL
        "PASSWORD": "yourpassword",
        "HOST": "localhost",
        "PORT": "5432",
    }
}

# -------------------------------
# AUTHENTICATION
# -------------------------------
AUTH_USER_MODEL = "PriceTrack.User"  # Custom user model

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# -------------------------------
# INTERNATIONALIZATION
# -------------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# -------------------------------
# STATIC FILES
# -------------------------------
STATIC_URL = 'static/'

# -------------------------------
# DEFAULT PRIMARY KEY
# -------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# -------------------------------
# REST FRAMEWORK CONFIGURATION
# -------------------------------
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.AllowAny",   # Lock down per-view as needed
    ),
}

# -------------------------------
# SIMPLE JWT SETTINGS
# -------------------------------
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": True,
}

# -------------------------------
# CORS SETTINGS (Allow frontend access)
# -------------------------------
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5000",  # Vite dev server
    "http://localhost:3000",  # CRA dev server
    "http://192.168.1.14:3000",  # Local IP frontend
    "http://127.0.0.1:3000",

]

# CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ["DELETE", "GET", "OPTIONS", "PATCH", "POST", "PUT"]
CORS_ALLOW_HEADERS = [
    "authorization",
    "content-type",
    "x-csrftoken",
    "accept",
    "origin",
    "user-agent",
    "dnt",
    "cache-control",
    "x-requested-with",
]
# -------------------------------
# EMAIL SETTINGS (Gmail SMTP)
# -------------------------------
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "arya.pspk@gmail.com"          # Replace with your Gmail
EMAIL_HOST_PASSWORD = "szxo czev vkwd mhfy"     # App password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# -------------------------------
# LOGGING (Console output for debugging)
# -------------------------------
LOGGING = {
    'version': 1,
    'handlers': {'console': {'class': 'logging.StreamHandler'}},
    'root': {'handlers': ['console'], 'level': 'DEBUG'},
}
